<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[csharpATM之功能篇（存钱，取钱，转账，交易明细）完结篇]]></title>
    <url>%2F2019%2F07%2F29%2FcsharpATM%E4%B9%8B%E5%8A%9F%E8%83%BD%E7%AF%87%EF%BC%88%E5%AD%98%E9%92%B1%EF%BC%8C%E5%8F%96%E9%92%B1%EF%BC%8C%E8%BD%AC%E8%B4%A6%EF%BC%8C%E4%BA%A4%E6%98%93%E6%98%8E%E7%BB%86%EF%BC%89%E5%AE%8C%E7%BB%93%E7%AF%87%2F</url>
    <content type="text"><![CDATA[c#ATM之功能篇（存钱，取钱，转账，交易明细）完结篇带详细注释。一共七个功能，不难，代码还有优化空间，之后再发一篇ATM之优化篇。 首先先添加一条命名空间 1using System.Data.SqlClient; 123456789101112public Form3() &#123; InitializeComponent(); &#125; public Form3(string str)//构造一个函数用来接收来自Form1的卡号 &#123; InitializeComponent(); textBox1.Text = str; //MessageBox.Show(str);打印从form1传来的参数 验证是不是登录时的卡号 &#125; 1， button1查询余额的功能 1234567891011121314151617181920private void button1_Click(object sender, EventArgs e) &#123; //连接数据库字符串 string count = &quot;SERVER=.;DATABASE=OX;USER=SA;PWD=1;Integrated Security=True;&quot;; //执行sql语句 string sql = &quot;select * from DATA where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con = new SqlConnection(count); con.Open(); //创建操作对象cmd SqlCommand cmd = new SqlCommand(sql, con); SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read(); //读取余额填充到textBox2.Text中 textBox2.Text = dr[&quot;MORY&quot;].ToString().Trim(); //有打开就要有关闭哦 dr.Close(); con.Close(); &#125; 2， button2取钱功能 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364//取钱的功能：→要判断自己有多少钱，能取的钱不能大于自己的本金，钱不能取负数private void button2_Click(object sender, EventArgs e) &#123; //先判断textBox2.Text等不等于空，不等于空就执行else里面的语块句 if (textBox2.Text==&quot;&quot;) &#123; MessageBox.Show(&quot;请输入金额&quot;); &#125; else &#123; string count = &quot;SERVER=.;DATABASE=OX;USER=SA;PWD=1;Integrated Security=True;&quot;; string sql01 = &quot;select * from DATA where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con01 = new SqlConnection(count); con01.Open(); SqlCommand cmd01 = new SqlCommand(sql01, con01); SqlDataReader dr01 = cmd01.ExecuteReader(); dr01.Read(); //Convert.表示强制转换的意思 ToInt32表示类型 类型可以换 int i = Convert.ToInt32(dr01[&quot;mory&quot;].ToString().Trim()); //将string类型的文本框强制转换成int类型，思考一下，不用这类强制转换，还有哪些方法可以强制转换 int j = Convert.ToInt32(textBox2.Text); int k = i - j; int txt = Convert.ToInt32(textBox2.Text); dr01.Close(); if (txt &gt; i | txt &lt; 0) &#123; MessageBox.Show(&quot;取出来的钱不能大于本金或为负数&quot;, &quot;温馨提示&quot;); &#125; else &#123; //原来的本金减去要取出来的金额 //先读取原来的本金为i,再获得取款の为j 即i-j=k 输入数据库 ， string NOW = &quot;&quot;;//先申明一个空变量来接收时间信息 string count01 = &quot;server=.;database=ox;user=sa;pwd=1;Integrated Security=True;&quot;; string sql = &quot;select * from DATA&quot;; SqlConnection con = new SqlConnection(count); con.Open(); SqlCommand cmd = new SqlCommand(sql, con); SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read(); /*-----------先读取之前转账的信息------------*/ NOW = dr[&quot;RECORD&quot;].ToString().Trim(); dr.Close(); con.Close(); &#125; /*------插入储存信息格式------*/ NOW += DateTime.Now.Year + &quot;/&quot; + DateTime.Now.Month + &quot;/&quot; + DateTime.Now.Day + &quot;/&quot; + DateTime.Now.Hour + &quot;/&quot; + DateTime.Now.Minute + &quot;/&quot; + DateTime.Now.Second; NOW += &quot;我方卡号：&quot; + textBox1.Text; NOW += &quot; 金额：&quot; + textBox2.Text + &quot;元 &quot; + &quot;已取出&quot;; string sql02 = &quot;update DATA set mory=&apos;&quot; + k + &quot;&apos;,RECORD=&apos;&quot; + NOW + &quot;&apos;where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con02 = new SqlConnection(count01); con02.Open(); SqlCommand cmd02 = new SqlCommand(sql02, con02); SqlDataReader dr02 = cmd02.ExecuteReader(); dr02.Read(); MessageBox.Show(&quot;取款成功&quot;); dr02.Close(); con02.Close(); &#125; &#125; &#125; 3， textBox2_KeyPress屏蔽要字母，有这段代码就是文本框里面不能输入字母和符号 123456789101112131415private void textBox2_KeyPress(object sender, KeyPressEventArgs e) &#123; if (e.KeyChar &gt; 0x20) &#123; try &#123; double.Parse(((TextBox)sender).Text + e.KeyChar.ToString()); &#125; catch &#123; e.KeyChar = (char)0; //处理非法字符 &#125; &#125; &#125; 4， textBox3_KeyPress屏蔽要字母，有这段代码就是文本框里面不能输入字母和符号 1234567891011121314private void textBox3_KeyPress(object sender, KeyPressEventArgs e) &#123; if (e.KeyChar &gt; 0x20) &#123; try &#123; double.Parse(((TextBox)sender).Text + e.KeyChar.ToString()); &#125; catch &#123; e.KeyChar = (char)0; //处理非法字符 &#125; &#125; &#125; 5， textBox4_KeyPress屏蔽要字母，有这段代码就是文本框里面不能输入字母和符号 1234567891011121314private void textBox4_KeyPress(object sender, KeyPressEventArgs e) &#123; if (e.KeyChar &gt; 0x20) &#123; try &#123; double.Parse(((TextBox)sender).Text + e.KeyChar.ToString()); &#125; catch &#123; e.KeyChar = (char)0; //处理非法字符 &#125; &#125; &#125; 6， button3存钱功能 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960private void button3_Click(object sender, EventArgs e) &#123; int txt = Convert.ToInt32(textBox2.Text); if (txt &lt; 0) &#123; MessageBox.Show(&quot;不能存小于0的金额&quot;); &#125; else &#123; string NOW=&quot;&quot;; string count = &quot;server=.;database=ox;user=sa;pwd=1;Integrated Security=True;&quot;; string sql = &quot;select * from DATA&quot;; SqlConnection con = new SqlConnection(count); con.Open(); SqlCommand cmd = new SqlCommand(sql, con); SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read(); /*-----------先读取之前转账的信息------------*/ NOW = dr[&quot;RECORD&quot;].ToString().Trim(); //NOW1 = dr[&quot;RECORD&quot;].ToString().Trim(); &#125; dr.Close(); con.Close(); /*------插入储存信息格式------*/ NOW += DateTime.Now.Year + &quot;/&quot; + DateTime.Now.Month + &quot;/&quot; + DateTime.Now.Day + &quot;/&quot; + DateTime.Now.Hour + &quot;/&quot; + DateTime.Now.Minute + &quot;/&quot; + DateTime.Now.Second; NOW += &quot;我方卡号：&quot; + textBox1.Text; NOW += &quot; 金额：&quot; + textBox2.Text + &quot;元 &quot; + &quot;已存入&quot;; /*-----------先判断自己有多少本金再加上要存储的金额------等这些计算好了在存进数据中-------*/ string count01 = &quot;SERVER=.;DATABASE=OX;USER=SA;PWD=1;Integrated Security=True;&quot;; string sql01 = &quot;select * from DATA where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con01 = new SqlConnection(count01); con01.Open(); SqlCommand cmd01 = new SqlCommand(sql01, con01); SqlDataReader dr01 = cmd01.ExecuteReader(); dr01.Read(); int i = Convert.ToInt32(dr01[&quot;mory&quot;].ToString().Trim());//读取自己的账户有多少钱 int j = Convert.ToInt32(textBox2.Text);//接受要储存的金额 int k = i + j;//本金加要储存的金额 dr01.Close(); con01.Close(); /*------------------------*/ string sql02 = &quot;update DATA set mory=&apos;&quot; + k + &quot;&apos;,RECORD=&apos;&quot;+NOW+&quot;&apos;where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con02 = new SqlConnection(count); con02.Open(); SqlCommand cmd02 = new SqlCommand(sql02, con02); if (cmd02.ExecuteNonQuery() &gt; 0) &#123; MessageBox.Show(&quot;储存成功&quot;); &#125; else &#123; MessageBox.Show(&quot;Test&quot;); &#125; con02.Close(); &#125; &#125; 7.，button4转账功能 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105private void button4_Click(object sender, EventArgs e) &#123; if (textBox4.Text==&quot;&quot;&amp;textBox3.Text==&quot;&quot;) &#123; MessageBox.Show(&quot;请输入转账信息&quot;); &#125; else &#123; textBox3.Visible = true; label3.Visible = true; textBox4.Visible = true; label4.Visible = true; int i2, text2, text4; if (true) &#123; string count = &quot;SERVER=.;USER=SA;PWD=1;DATABASE=OX;Integrated Security=True;&quot;; string sql = &quot;select * from DATA where ID=&apos;&quot; + textBox1.Text + &quot;&apos;&quot;; SqlConnection cno = new SqlConnection(count); SqlCommand cmd = new SqlCommand(sql, cno); cno.Open(); SqlDataReader dr = cmd.ExecuteReader(); dr.Read(); //I1-TXT=自己账号的本金更新数据 txt+i2=对方的本金 更新数据 int i1 = Convert.ToInt32(dr[&quot;mory&quot;].ToString().Trim());//获取自己的本金 i2 = i1; dr.Close(); cno.Close(); //text4 = textBox4.Text; int txt4 = Convert.ToInt32(textBox4.Text);//要转账的金额 int txt2 = Convert.ToInt32(textBox2.Text); text2 = txt2; text4 = txt4; &#125; if (/*text2 &gt; i2 | text2 &lt; 0 |*/ text4 &gt; i2 | text4 &lt; 0) &#123; MessageBox.Show(&quot;取出来的钱不能大于本金或为负数&quot;, &quot;温馨提示&quot;); &#125; else &#123; string NOW = &quot;&quot;; string NOW1 = &quot;&quot;; //MessageBox.Show(NOW); string count = &quot;server=.;database=ox;user=sa;pwd=1;Integrated Security=True;&quot;; string sql = &quot;select * from DATA&quot;; SqlConnection con = new SqlConnection(count); con.Open(); SqlCommand cmd = new SqlCommand(sql, con); SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read(); /*-----------先读取之前转账的信息------------*/ NOW = dr[&quot;RECORD&quot;].ToString().Trim(); NOW1 = dr[&quot;RECORD&quot;].ToString().Trim(); &#125; dr.Close(); con.Close(); //----------储存转账信息------------ NOW += DateTime.Now.Year + &quot;/&quot; + DateTime.Now.Month + &quot;/&quot; + DateTime.Now.Day + &quot;/&quot; + DateTime.Now.Hour + &quot;/&quot; + DateTime.Now.Minute + &quot;/&quot; + DateTime.Now.Second; NOW += &quot;对方卡号：&quot; + textBox3.Text; NOW += &quot;金额：&quot; + text4 + &quot;元 &quot; + &quot;已转入&quot;; /*-----------先判断要存进多少钱，然后自己的账户减多少钱和对方账户加多少钱------等这些计算好了在存进数据中-------*/ string count01 = &quot;SERVER=.;USER=SA;PWD=1;DATABASE=OX;Integrated Security=True;&quot;; string sql01 = &quot;select * from DATA where ID=&apos;&quot; + textBox3.Text + &quot;&apos;&quot;; SqlConnection cno01 = new SqlConnection(count01); cno01.Open(); SqlCommand cmd01 = new SqlCommand(sql01, cno01); SqlDataReader dr01 = cmd01.ExecuteReader(); dr01.Read(); int i3 = Convert.ToInt32(dr01[&quot;mory&quot;].ToString().Trim());//获取对方账号的本金 dr01.Close(); cno01.Close(); int j = i2 - text4;//减去转账的金额等于剩下自己的本金 string count02 = &quot;SERVER=.;USER=SA;PWD=1;DATABASE=OX;Integrated Security=True;&quot;; string sql02 = &quot;update DATA set mory=&apos;&quot; + j + &quot;&apos; ,RECORD=&apos;&quot; + NOW + &quot;&apos; where ID=&apos;&quot; + textBox1.Text + &quot;&apos;&quot;; //string sql = &quot;select count(*) from yonghu where yname=&apos;&quot; + textBox4.Text + &quot;&apos; and ypwd=&apos;&quot; + textBox5.Text + &quot;&apos;&quot;; //插入信息 SqlConnection cno02 = new SqlConnection(count02); cno02.Open(); SqlCommand cmd02 = new SqlCommand(sql02, cno02); int n = cmd02.ExecuteNonQuery(); dr01.Close(); NOW1 = DateTime.Now.Year + &quot;/&quot; + DateTime.Now.Month + &quot;/&quot; + DateTime.Now.Day + &quot;/&quot; + DateTime.Now.Hour + &quot;/&quot; + DateTime.Now.Minute + &quot;/&quot; + DateTime.Now.Second; NOW1 += &quot;对方卡号：&quot; + textBox3.Text; NOW1 += &quot;金额：&quot; + text4 + &quot;元 &quot; + &quot;已转出&quot;; int k = i3 + text4;//加上转账过来的金额等于自己的本金 string count03 = &quot;SERVER=.;USER=SA;PWD=1;DATABASE=OX;&quot;; string sql03 = &quot;update DATA set mory=&apos;&quot; + k + &quot;&apos;, RECORD=&apos;&quot; + NOW1 + &quot;&apos; where ID=&apos;&quot; + textBox3.Text + &quot;&apos;&quot;; SqlConnection cno03 = new SqlConnection(count03); cno03.Open(); SqlCommand cmd03 = new SqlCommand(sql03, cno03); if (cmd03.ExecuteNonQuery() &gt; 0) &#123; MessageBox.Show(&quot;转账成功&quot;); &#125; else &#123; MessageBox.Show(&quot;Test&quot;); &#125; &#125; &#125; &#125; 8， button5交易明细 12345678910111213141516171819202122private void button5_Click(object sender, EventArgs e) &#123; textBox3.Visible = true; label3.Visible = true; textBox4.Visible = true; label4.Visible = true; textBox5.Visible = true; //MessageBox.Show(NOW); string count = &quot;server=.;database=ox;user=sa;pwd=1;Integrated Security=True;&quot;; string sql = &quot;select * from DATA&quot;; SqlConnection con = new SqlConnection(count); con.Open(); SqlCommand cmd = new SqlCommand(sql,con); SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read(); textBox5.Text = dr[&quot;RECORD&quot;].ToString().Trim(); dr.Close(); &#125; con.Close(); &#125; 9， button6返回登录界面 123456private void button6_Click(object sender, EventArgs e) &#123; this.Close(); Form1 f1 = new Form1(); f1.Show(); &#125; c#ATM之找回密码篇https://blog.csdn.net/I_TenKai/article/details/84559021 c#ATM之登录篇https://blog.csdn.net/I_TenKai/article/details/84559021]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>csharpATM之功能篇（存钱，取钱，转账，交易明细）完结篇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[csharp_ATM之找回密码篇]]></title>
    <url>%2F2019%2F07%2F29%2Fcsharp_ATM%E4%B9%8B%E6%89%BE%E5%9B%9E%E5%AF%86%E7%A0%81%E7%AF%87%2F</url>
    <content type="text"><![CDATA[1.先添加一行命名空间，如果没有这一行代码，下面的代码绝对会出错 1using System.Data.SqlClient;` 1234567891011public Form2() &#123; InitializeComponent(); &#125; Form1 f01; public Form2(Form1 f1)//隐藏父窗体，然后通过but2 show出来 &#123; InitializeComponent(); f01 = f1; &#125; 2.为textBox3设置密码掩字符 1234private void textBox3_TextChanged(object sender, EventArgs e) &#123; textBox3.PasswordChar = &apos;*&apos;; &#125; 3.验证卡号与凭证是否匹配 1234567891011121314151617181920212223242526272829303132333435private void button1_Click(object sender, EventArgs e) &#123; if (textBox1.Text == &quot;&quot; &amp; textBox2.Text == &quot;&quot; &amp; textBox3.Text == &quot;&quot;) &#123; MessageBox.Show(&quot;不能留空哦&quot;); &#125; else &#123; string count = &quot;SERVER=.;DATABASE=OX;USER=SA;PWD=1;&quot;; //string sql= &quot;update server set pwd=&apos;&quot; + textBox3.Text.Trim() + &quot;&apos;where sno=&apos;&quot;+textBox1.Text+&quot;&apos;where sfz=&apos;&quot;+textBox2.Text+&quot;&apos;&quot;; string sql = &quot;update USERR set pwd=&apos;&quot; + textBox3.Text + &quot;&apos;where ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;AND ID IN(SELECT ID FROM DATA WHERE SFZ=&apos;&quot;+textBox2.Text+&quot;&apos;)&quot;; //UPDATE USERR SET PWD=&apos;12&apos; WHERE ID=&apos;123&apos; AND ID IN(SELECT ID FROM DATA WHERE SFZ=&apos;9876&apos;) SqlConnection con = new SqlConnection(count);//创建连接对象 con.Open(); SqlCommand cmd = new SqlCommand(sql, con);//创建操作对象 if (cmd.ExecuteNonQuery()&gt;0) &#123; MessageBox.Show(&quot;修改成功&quot;); Form1 f1 = new Form1(); this.button1.Visible = true; //this.button2.Visible = true; this.textBox1.Visible = true; this.textBox2.Visible = true; this.label1.Visible = true; this.label2.Visible = true; this.label3.Visible = true; f01.Hide(); f1.Show(); &#125; else &#123; MessageBox.Show(&quot;修改失败&quot;); &#125; &#125; &#125; 这是上篇c#ATM之登录篇 https://blog.csdn.net/I_TenKai/article/details/84558647]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>csharp之模拟ATm机（取钱，存钱，转账，交易明细）登陆篇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[csharp_ATM之登录篇]]></title>
    <url>%2F2019%2F07%2F29%2Fcsharp_ATM%E4%B9%8B%E7%99%BB%E5%BD%95%E7%AF%87%2F</url>
    <content type="text"><![CDATA[c#ATM之登录篇一共三个窗体，一个作为父窗体，另外两个设为子窗体。Form1为父窗体，Form2为子窗体，Form3为子窗体。 Form2作为修改密码的窗体，Form3作为ATM的功能实现。 先说一下思路：首先需要验证一下自己的账号和密码对不对，验证成功的话就进入下一个界面。先给你看数据库表怎么设计↓↓表名：ox先新建两个表↓这是表DATA中的数据类型↓ 这是表DATA中的内容↓ 这是表USERR中的数据类型↑ 这是表USERR中的内容↓ 这是登录界面↓↓ 代码如下↓↓ 2.0//先添加一条命名空间 1using System.Data.SqlClient; 2.1//先设这个窗体为父窗体 12345public Form1() &#123; InitializeComponent(); IsMdiContainer = true;//先设这个窗体为父窗体 &#125; 2.2//设置登录按钮的功能 12345678910111213141516171819202122232425262728293031323334353637383940private void button1_Click(object sender, EventArgs e) &#123; string count = &quot;SERVER=.;DATABASE=OX;USER=SA;PWD=1;Integrated Security=True&quot;;//连接数据库字符串 //执行sql语句 string sql = &quot;SELECT * FROM USERR WHERE ID=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;; SqlConnection con = new SqlConnection(count); SqlCommand cmd = new SqlCommand(sql,con); con.Open(); //读取数据库表中的内容 SqlDataReader dr = cmd.ExecuteReader(); if (dr.HasRows) &#123; dr.Read();//有打开阅读就有关闭 if (textBox2.Text == dr[&quot;PWD&quot;].ToString().Trim())//用dr来验证密码框输入的字符串和数据库中的字符串相不相等 &#123; MessageBox.Show(&quot;登录成功&quot;); //——————登录成功后需要把这里控件隐藏起来————— textBox1.Visible = false; textBox2.Visible = false; label1.Visible = false; label2.Visible = false; label3.Visible = false; button1.Visible = false; button2.Visible = false; Form3 f3 = new Form3(textBox1.Text);//传递账号给f3 f3.MdiParent = this;//设为子窗体 f3.Show(); &#125; else MessageBox.Show(&quot;请检查密码&quot;); &#125; else &#123; MessageBox.Show(&quot;请检查账号是否存在&quot;); &#125; con.Close(); &#125; 2.3//设置找回密码按钮的功能 123456789101112131415161718private void button2_Click(object sender, EventArgs e) &#123; Form2 f2 = new Form2(this); this.button1.Visible = false; this.button2.Visible = false; this.textBox1.Visible = false; this.textBox2.Visible = false; this.label1.Visible = false; this.label2.Visible = false; this.label3.Visible = false; f2.MdiParent = this; f2.Show(); &#125; private void textBox2_TextChanged(object sender, EventArgs e) &#123; textBox2.PasswordChar = &apos;*&apos;;//设置密码框的掩码符 &#125; 下一篇介绍：ATM之找回密码篇]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>csharp之模拟ATm机（取钱，存钱，转账，交易明细）登陆篇</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[csharp连接数据库的简单实现]]></title>
    <url>%2F2019%2F07%2F29%2Fcsharp%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%2F</url>
    <content type="text"><![CDATA[控件布局如下 代码如下 12345678910111213141516171819202122232425262728293031323334353637using System.Data.SqlClient;//添加一条using命令 //双击textBox2 private void textBox2_TextChanged(object sender, EventArgs e) &#123; textBox2.UseSystemPasswordChar = true;//设置密码符 &#125; private void button1_Click(object sender, EventArgs e) &#123; string count = &quot;Server =.;user = sa; pwd = 1;Database =ox;&quot;; //连接数据库字符串 string sql = &quot;select * from student where sno=&apos;&quot; + textBox1.Text.Trim() + &quot;&apos;&quot;;//查询要登录的账号进行查询 SqlConnection con = new SqlConnection(count);//创建con 对象 SqlCommand cmd = new SqlCommand(sql, con);//创建cmd 对象 con.Open();//打开数据库 SqlDataReader dr = cmd.ExecuteReader();//读取数据库信息 try &#123; if (dr.HasRows)//读取行 &#123; dr.Read();//允许阅读 if (textBox2.Text == dr[&quot;pwd&quot;].ToString().Trim())//比较输入的密码和数据库里的密码 MessageBox.Show(&quot;登录成功&quot;);//true为成功 else MessageBox.Show(&quot;登录失败&quot;);//flash为失败 dr.Close(); &#125; &#125; catch (Exception ex)//捕捉错误，这个模块很好用，不要写成空catch（） &#123; MessageBox.Show(ex.Message.ToString()); &#125; finally //一定会执行 &#123; con.Close(); &#125; &#125; &#125; 欢迎留言交流，可私信我交流。]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>csharp连接数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[九九乘法表的四种玩法带详细注释]]></title>
    <url>%2F2019%2F07%2F29%2F%E4%B9%9D%E4%B9%9D%E4%B9%98%E6%B3%95%E8%A1%A8%E7%9A%84%E5%9B%9B%E7%A7%8D%E7%8E%A9%E6%B3%95%E5%B8%A6%E8%AF%A6%E7%BB%86%E6%B3%A8%E9%87%8A-%2F</url>
    <content type="text"><![CDATA[1.最少需要一个窗体，五个Button控件，四个Label控件 思路是这样的子，一个九九乘法表是由行列组成的，要想办法控制它的行和列，以及它的空格位，才能达到完美效果。 先上效果图↓↓↓↓ 1. 控件布局如图↓↓↓↓ 2. 代码如下___仅供参考__引用，转载请说明出处____如有不完善的地方请联系我123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293//双击but1private void but1_Click(object sender, EventArgs e) &#123; string rst = &quot;&quot;; //打印1-9的数（i能取1-9之间的数），i自增 //一共9个数 for (int i = 1; i &lt; 10; i++)//控制列，一共9列，可以把10换掉自己尝试一下感觉 &#123; // &lt;当i=1，j=1的时候，j&lt;=10-(1+1) j=8，j自增&gt; // &lt;当i=2，j=2的时候，j&lt;=10-(2+1) j=7, j自增&gt; // &lt;当i=3，j=3的时候，j&lt;=10-(3+1) j=6, j自增&gt; //....以此类推 // &lt;当i=9，j=8的时候，j&lt;=10-(9+1) j=0, j自增&gt; //取值0-8,一共9个数 for (int j = 1; j &lt;= 10 - (i + 1); j++)//控制行，一共9行，可以把10换掉自己尝试一下感觉 &#123; for (int k = 1; k &lt; 8; k++)//打印1-7之间的空格数，一共7位数，循环7次 &#123; rst += &quot; &quot;; //控制空格数，一条式子最多为6位数加上一个空格数&quot;1*2=03_&quot;用_代替一个空格位 &#125; &#125; for (int j = 1; j &lt; i + 1; j++) //1*2=2 ==》j*i=（j*i）要输出的样式 &#123; rst += string.Format(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125; &quot;, j, i, i * j &lt; 10 ? &quot; &quot;+ i * j : +i * j + &quot;&quot;); /*语法为：条件表达式？表达式1：表达式2； a=3&gt;4?3:4; 3&gt;4返回flash，把4赋值给a。 表达式1返回的布尔值位turn，表达式2返回的布尔值位flash*/ &#125; rst += &quot;\n&quot;;//换行 &#125; label1.Text = rst; &#125; //双击but2private void but2_Click(object sender, EventArgs e) &#123; string rst = &quot;&quot;; for (int i = 1; i &lt; 10; i++) &#123; for (int j = 1; j &lt; i + 1; j++) &#123; rst += string.Format(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125; &quot;, i, j, j * i &lt; 10 ? &quot; &quot; + i * j : +i * j + &quot;&quot;); &#125; rst += &quot;\n&quot;; &#125; label2.Text = rst; &#125; //双击but3 private void but3_Click(object sender, EventArgs e) &#123; string rst = &quot;&quot;;//左上三角 for (int i = 1; i &lt; 10; i++)//行数 &#123; for (int j = i; j &lt; 10; j++)//列数 &#123; rst += string.Format(&quot;&#123;0&#125;*&#123;1&#125;=&#123;2&#125; &quot;, i, j, j * i &lt; 10 ? &quot; &quot; + i * j : +i * j + &quot;&quot;); &#125; rst += &quot;\n&quot;; &#125; label3.Text = rst; &#125; //双击but4private void but4_Click(object sender, EventArgs e) &#123; string rst = &quot;&quot;; for (int i = 1; i &lt; 10; i++) &#123; for (int j = 0; j &lt; i - 1; j++) &#123; rst += &quot; &quot;; &#125; for (int j = i; j &lt; 10; j++) &#123; rst += string.Format(&quot; &#123;0&#125;*&#123;1&#125;=&#123;2&#125;&quot;, j, i, j * i &lt; 10 ? &quot; &quot; + i * j : +i * j + &quot;&quot;); &#125; rst += &quot;\n&quot;; &#125; label4.Text = rst; &#125; //双击but5 private void but5_Click(object sender, EventArgs e) &#123; label1.Text = &quot;label1&quot;; label2.Text = &quot;label2&quot;; label3.Text = &quot;label3&quot;; label4.Text = &quot;label4&quot;; &#125;]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>c#九九乘法表</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[csharp_radioButton_跨窗体传递值简单的方法]]></title>
    <url>%2F2019%2F07%2F29%2Fcsharp_radioButton_%E8%B7%A8%E7%AA%97%E4%BD%93%E4%BC%A0%E9%80%92%E5%80%BC%E7%AE%80%E5%8D%95%E7%9A%84%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[c# radioButton 跨窗体传递值简单的方法 需要三个窗体，每个窗体里至少有两个radioButton控件 ，然后需要把 Form2，Form3 中radioButton的Modifiers属性改为 Public 接下来就是代码部分 代码部分 Form1 : Form 1234567891011121314151617private void button1_Click(object sender, EventArgs e) &#123; if (radioButton1.Checked==true)//判断radioButton1有没有被选中 &#123; Form2 f2 = new Form2();//实例化窗体 f2.Owner = this;//获取f2的窗体控件 f2.radioButton1.Checked = true;//f2的radioButton1被选中的状态为真 f2.Show();//显示f2窗体 &#125; if (radioButton2.Checked == true)//判断radioButton1有没有被选中 &#123; Form2 f2 = new Form2();//实例化窗体 f2.Owner = this;//获取f2的窗体控件 f2.radioButton2.Checked = true;//f2的radioButton2被选中的状态为真 f2.Show();//显示f2窗体 &#125; &#125; Form2 : Form 1234567891011121314151617private void button1_Click(object sender, EventArgs e) &#123; if (radioButton1.Checked==true) &#123; Form3 f3 = new Form3(); f3.Owner = this; f3.radioButton1.Checked = true; f3.Show(); &#125; if (radioButton2.Checked == true) &#123; Form3 f3 = new Form3(); f3.Owner = this; f3.radioButton2.Checked = true; f3.Show(); &#125; &#125; Form3 : Form 1Form3 只需要把界面做好就行]]></content>
      <categories>
        <category>c#</category>
      </categories>
      <tags>
        <tag>c#跨窗体传值</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我要搭建hexo博客,记录我搭建博客过程，也分享下]]></title>
    <url>%2F2019%2F07%2F29%2F%E6%88%91%E8%A6%81%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%2C%E8%AE%B0%E5%BD%95%E6%88%91%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%EF%BC%8C%E4%B9%9F%E5%88%86%E4%BA%AB%E4%B8%8B%2F</url>
    <content type="text"><![CDATA[我是在win环境下运行的所以需要下载一个Git， 安装好后，鼠标右击有一个菜单Git bash Here 这是打命令行的地方。 hexo是基于node.js所以我们要下载node.js, 选择自己对应的版本。路径基本上是不建议更改的，安装就一直下一步。 下载Gitgit的一些知识扫盲打开git bash Here输入 1node -v 1npm -v 在我输入npm -v是报错了，不允许操作，困扰我不少时间，解决方法点这里 设置淘宝镜像 因为原来的地址是在国外，又没有vpn加速，所以使用阿里云的淘宝镜像，下载是一样的，速度是比国外快多了。 1npm install -g cnpm --registry=https://registry.npm.taobao.org 全局安装hexo1cnpm install -g hexo-cli 如果这句出现了 bash: cnpm: command not found换成npm install -g hexo-cli也能成。 安装完成后检验一下hexo -v会出现一推这样的信息，表示安装成功。 `hexo-cli: 2.0.0 http_parser: 2.8.0 node: 10.16.0 v8: 6.8.275.32-node.52 uv: 1.28.0 zlib: 1.2.11 brotli: 1.0.7 ares: 1.15.0 modules: 64 nghttp2: 1.34.0 napi: 4 openssl: 1.1.1b icu: 64.2 unicode: 12.1 cldr: 35.1 tz: 2019a建一个文件夹，用来储存你博客的信息，例如D:\hexo\myblog用命令行表示就是mkdir d:/hexo/myblog建好后可以打开路径看看，或者使用常用建文件夹也是可以的。 初始化你的博客进入你的博客目录 1cd d:/hexo/myblog 进行初始化 1hexo init 可以查看生成了什么目录 1ls -l 安装完成启动博客1hexo s 会出现以下的信息 12INFO Start processingINFO Hexo is running at http://localhost:4000 . Press Ctrl+C to stop. 按住Ctrl 点击 http://localhost:4000 自动帮你打开这个页面，也就是你的博客，生成成功了。 写入文章1hexo new &quot;Myblog_Test&quot; 文章生成的路径然后我们找到这里路径修改文章。 1cd source/_posts/ #这个符号是注释用的，是给人看的，不是给机器的命令， cd sou 可以按两下tab键会自动补全 vim 上古神器，来修改文章1vim My #两下tab键自动补全 键入（键盘输入） i就可以输入内容了写完了要怎么保存退出？按一下左上角esc键键入 :wq 保存退出的意思单单:q 退出的意思 退回原来myblog目录生成文章返回原来myblog的目录12345pwd #查看当前的路径#会显示出 /d/hexo/myblog/source/_posts #返回到myblog 需要退两格 ..表示一个目录 ../.. 表示退两格目录cd ../..pwd #会显示 /d/hexo/myblog 生成文章123hexo g #生成#会出现一堆东西hexo s #启动服务 博客搭建算是完成了是不是觉得还有一个问题没有解决，自己能访问，可是如何让别人也能访问我的博客呢，别人能访问这样才有意思对吧。 有可以购买服务器，域名，这种是要花软妹币的。 还有一种不用花软妹币的方法是通过Github page 来部署我们的博客。我是采取后者也建议大家采用后者对英语不友好的同学可以使用chrome浏览器 里面有自带网页翻译，比某狗游览器好用多了 。注册github账号用户名要想好哈，，没想好，后期也可以改，但不建议。用户名例如我的Hzrj ，以后我的博客网址就是Hzrj.github.io 可以绑定域名往后看## 注册好后，新建仓库填写仓库名一定要用自己的用户名.github.io 回到git bash上 安装git插件1cnpm install --save hexo-deployer-git 配置_config.yml文件1vim _config.yml 配置文件，翻到最下面， type和branch跟着写，repo写你刚刚新建的仓库地址 部署到github上，你的博客可以被别人访问了1hexo d 部署过程中，要是有提示什么username，userpwd之类的，输入你的账号，密码就好了部署完后，出现一堆信息，结尾如下 12Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/Hzrj/Hzrj.github.io.git&apos;.INFO Deploy done: git 表示部署成功了，这是到github上刷新一下把你的仓库名复制到地址栏访问 如 Hzrj.github.io 如果没有出现东西，那刷新一下就应该有了。 hexo主题 更换主题1git clone https://github.com/theme-next/hexo-theme-next.git themes/next]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexod搭建博客</tag>
      </tags>
  </entry>
</search>
